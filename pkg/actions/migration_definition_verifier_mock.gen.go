// Code generated by mockery. DO NOT EDIT.

package actions

import mock "github.com/stretchr/testify/mock"

// MigrationDefinitionVerifierMock is an autogenerated mock type for the MigrationDefinitionVerifier type
type MigrationDefinitionVerifierMock struct {
	mock.Mock
}

type MigrationDefinitionVerifierMock_Expecter struct {
	mock *mock.Mock
}

func (_m *MigrationDefinitionVerifierMock) EXPECT() *MigrationDefinitionVerifierMock_Expecter {
	return &MigrationDefinitionVerifierMock_Expecter{mock: &_m.Mock}
}

// Verify provides a mock function with given fields: folder, definition
func (_m *MigrationDefinitionVerifierMock) Verify(folder string, definition MigrationDefinition) (bool, error) {
	ret := _m.Called(folder, definition)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(string, MigrationDefinition) (bool, error)); ok {
		return rf(folder, definition)
	}
	if rf, ok := ret.Get(0).(func(string, MigrationDefinition) bool); ok {
		r0 = rf(folder, definition)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string, MigrationDefinition) error); ok {
		r1 = rf(folder, definition)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MigrationDefinitionVerifierMock_Verify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Verify'
type MigrationDefinitionVerifierMock_Verify_Call struct {
	*mock.Call
}

// Verify is a helper method to define mock.On call
//   - folder string
//   - definition MigrationDefinition
func (_e *MigrationDefinitionVerifierMock_Expecter) Verify(folder interface{}, definition interface{}) *MigrationDefinitionVerifierMock_Verify_Call {
	return &MigrationDefinitionVerifierMock_Verify_Call{Call: _e.mock.On("Verify", folder, definition)}
}

func (_c *MigrationDefinitionVerifierMock_Verify_Call) Run(run func(folder string, definition MigrationDefinition)) *MigrationDefinitionVerifierMock_Verify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(MigrationDefinition))
	})
	return _c
}

func (_c *MigrationDefinitionVerifierMock_Verify_Call) Return(_a0 bool, _a1 error) *MigrationDefinitionVerifierMock_Verify_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MigrationDefinitionVerifierMock_Verify_Call) RunAndReturn(run func(string, MigrationDefinition) (bool, error)) *MigrationDefinitionVerifierMock_Verify_Call {
	_c.Call.Return(run)
	return _c
}

// NewMigrationDefinitionVerifierMock creates a new instance of MigrationDefinitionVerifierMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMigrationDefinitionVerifierMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *MigrationDefinitionVerifierMock {
	mock := &MigrationDefinitionVerifierMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
