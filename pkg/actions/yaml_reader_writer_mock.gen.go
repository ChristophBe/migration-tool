// Code generated by mockery. DO NOT EDIT.

package actions

import mock "github.com/stretchr/testify/mock"

// YamlReaderWriterMock is an autogenerated mock type for the YamlReaderWriter type
type YamlReaderWriterMock[T any] struct {
	mock.Mock
}

type YamlReaderWriterMock_Expecter[T any] struct {
	mock *mock.Mock
}

func (_m *YamlReaderWriterMock[T]) EXPECT() *YamlReaderWriterMock_Expecter[T] {
	return &YamlReaderWriterMock_Expecter[T]{mock: &_m.Mock}
}

// Read provides a mock function with given fields: fileName
func (_m *YamlReaderWriterMock[T]) Read(fileName string) (T, error) {
	ret := _m.Called(fileName)

	if len(ret) == 0 {
		panic("no return value specified for Read")
	}

	var r0 T
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (T, error)); ok {
		return rf(fileName)
	}
	if rf, ok := ret.Get(0).(func(string) T); ok {
		r0 = rf(fileName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(T)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(fileName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// YamlReaderWriterMock_Read_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Read'
type YamlReaderWriterMock_Read_Call[T any] struct {
	*mock.Call
}

// Read is a helper method to define mock.On call
//   - fileName string
func (_e *YamlReaderWriterMock_Expecter[T]) Read(fileName interface{}) *YamlReaderWriterMock_Read_Call[T] {
	return &YamlReaderWriterMock_Read_Call[T]{Call: _e.mock.On("Read", fileName)}
}

func (_c *YamlReaderWriterMock_Read_Call[T]) Run(run func(fileName string)) *YamlReaderWriterMock_Read_Call[T] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *YamlReaderWriterMock_Read_Call[T]) Return(_a0 T, _a1 error) *YamlReaderWriterMock_Read_Call[T] {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *YamlReaderWriterMock_Read_Call[T]) RunAndReturn(run func(string) (T, error)) *YamlReaderWriterMock_Read_Call[T] {
	_c.Call.Return(run)
	return _c
}

// Write provides a mock function with given fields: fileName, vales
func (_m *YamlReaderWriterMock[T]) Write(fileName string, vales T) error {
	ret := _m.Called(fileName, vales)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, T) error); ok {
		r0 = rf(fileName, vales)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// YamlReaderWriterMock_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type YamlReaderWriterMock_Write_Call[T any] struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - fileName string
//   - vales T
func (_e *YamlReaderWriterMock_Expecter[T]) Write(fileName interface{}, vales interface{}) *YamlReaderWriterMock_Write_Call[T] {
	return &YamlReaderWriterMock_Write_Call[T]{Call: _e.mock.On("Write", fileName, vales)}
}

func (_c *YamlReaderWriterMock_Write_Call[T]) Run(run func(fileName string, vales T)) *YamlReaderWriterMock_Write_Call[T] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(T))
	})
	return _c
}

func (_c *YamlReaderWriterMock_Write_Call[T]) Return(_a0 error) *YamlReaderWriterMock_Write_Call[T] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *YamlReaderWriterMock_Write_Call[T]) RunAndReturn(run func(string, T) error) *YamlReaderWriterMock_Write_Call[T] {
	_c.Call.Return(run)
	return _c
}

// NewYamlReaderWriterMock creates a new instance of YamlReaderWriterMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewYamlReaderWriterMock[T any](t interface {
	mock.TestingT
	Cleanup(func())
}) *YamlReaderWriterMock[T] {
	mock := &YamlReaderWriterMock[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
